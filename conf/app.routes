# microservice specific routes

POST          /new-form/:formTemplateId/:userId                                                         uk.gov.hmrc.gform.form.FormController.newForm(userId: UserId, formTemplateId: FormTemplateId, affinityGroup: Option[AffinityGroup] = None)
POST          /new-form/:formTemplateId/:userId/:affinityGroup                                          uk.gov.hmrc.gform.form.FormController.newForm(userId: UserId, formTemplateId: FormTemplateId, affinityGroup: Option[AffinityGroup])

PUT           /forms/:userId/:formTemplateId                                                            uk.gov.hmrc.gform.form.FormController.updateFormDataPlain(userId: UserId, formTemplateId: String)
PUT           /forms/:userId/:formTemplateId/:accessCode                                                uk.gov.hmrc.gform.form.FormController.updateFormData(userId: UserId, formTemplateId: String, accessCode: AccessCode)

PUT           /version/:userId/:formTemplateId                                                          uk.gov.hmrc.gform.form.FormController.changeVersionPlain(userId: UserId, formTemplateId: String)
PUT           /version/:userId/:formTemplateId/:accessCode                                              uk.gov.hmrc.gform.form.FormController.changeVersion(userId: UserId, formTemplateId: String, accessCode: AccessCode)

POST          /forms/:userId/:formTemplateId/from-legacy                                                uk.gov.hmrc.gform.form.FormController.createPlainFormFromLegacy(userId: UserId, formTemplateId: FormTemplateId)
POST          /forms/:userId/:formTemplateId/:accessCode/from-legacy                                    uk.gov.hmrc.gform.form.FormController.createFormFromLegacy(userId: UserId, formTemplateId: FormTemplateId, accessCode: AccessCode)

GET           /forms/all/:userId/:formTemplateId                                                        uk.gov.hmrc.gform.form.FormController.getAll(userId: UserId, formTemplateId: FormTemplateId)

GET           /forms/:userId/:formTemplateId                                                            uk.gov.hmrc.gform.form.FormController.getPlain(userId: UserId, formTemplateId: String)
GET           /forms/:userId/:formTemplateId/:accessCode                                                uk.gov.hmrc.gform.form.FormController.get(userId: UserId, formTemplateId: String, accessCode: AccessCode)

POST          /forms/:formId/delete                                                                     uk.gov.hmrc.gform.form.FormController.delete(formId: FormId)

POST          /forms/:formId/enrolment-callback                                                         uk.gov.hmrc.gform.form.FormController.enrolmentCallBack(formId: FormId)

DELETE        /forms/:userId/:formTemplateId/:accessCode/deleteFile/:fileId                             uk.gov.hmrc.gform.form.FormController.deleteFile(userId: UserId, formTemplateId: FormTemplateId, accessCode: AccessCode, fileId: FileId)

POST          /forms/:formId/:formTemplateId/:envelopeId/:noOfAttachments/createSubmission              uk.gov.hmrc.gform.submission.SubmissionController.createSubmission(formId: FormId, formTemplateId: FormTemplateId, envelopeId: EnvelopeId, noOfAttachments: Int)
POST          /forms/:userId/:formTemplateId/submitForm                                                 uk.gov.hmrc.gform.submission.SubmissionController.submitFormPlain(userId: UserId, formTemplateId: FormTemplateId)
POST          /forms/:userId/:formTemplateId/:accessCode/submitForm                                     uk.gov.hmrc.gform.submission.SubmissionController.submitForm(userId: UserId, formTemplateId: FormTemplateId, accessCode: AccessCode)

GET           /submissionDetails/all/:formTemplateId/:page/:pageSize                                    uk.gov.hmrc.gform.submission.SubmissionController.retrieveAll(formTemplateId: FormTemplateId, page: Int, pageSize: Int)
GET           /submissionDetails/:userId/:formTemplateId/:envelopeId                                    uk.gov.hmrc.gform.submission.SubmissionController.submissionDetailsPlain(userId: UserId, formTemplateId: FormTemplateId, envelopeId: EnvelopeId)
GET           /submissionDetails/:userId/:formTemplateId/:accessCode/:envelopeId                        uk.gov.hmrc.gform.submission.SubmissionController.submissionDetails(userId: UserId, formTemplateId: FormTemplateId, accessCode: AccessCode, envelopeId: EnvelopeId)

GET           /formBundles/:userId/:formTemplateId/:accessCode                                          uk.gov.hmrc.gform.submission.FormBundleController.getFormBundle(userId: UserId, formTemplateId: FormTemplateId, accessCode: AccessCode)
POST          /formBundles/:userId/:formTemplateId/:accessCode/submitAfterReview                        uk.gov.hmrc.gform.submission.FormBundleController.submitFormBundleAfterReview(userId: UserId, formTemplateId: FormTemplateId, accessCode: AccessCode)
PUT           /formBundles/:userId/:formTemplateId/:accessCode/:status/forceStatus                      uk.gov.hmrc.gform.submission.FormBundleController.forceUpdateFormStatus(userId: UserId, formTemplateId: FormTemplateId, accessCode: AccessCode, status: FormStatus)

GET           /formtemplates                                                                            uk.gov.hmrc.gform.formtemplate.FormTemplatesController.all
POST          /formtemplates                                                                            uk.gov.hmrc.gform.formtemplate.FormTemplatesController.upsert
GET           /formtemplates/get-titles-with-pii/:formTemplateRawId                                     uk.gov.hmrc.gform.formtemplate.FormTemplatesController.getTitlesWithPII(formTemplateRawId: FormTemplateRawId, filters: Option[String], includeJson: Boolean)
GET           /formtemplates/:formTemplateId/internal                                                   uk.gov.hmrc.gform.formtemplate.FormTemplatesController.get(formTemplateId: FormTemplateId)
GET           /formtemplates/:formTemplateId/latest                                                     uk.gov.hmrc.gform.formtemplate.FormTemplatesController.getLatest(formTemplateId: FormTemplateId)
GET           /formtemplates/:formTemplateId/sensitive                                                  uk.gov.hmrc.gform.formtemplate.FormTemplatesController.getRawSensitive(formTemplateId: String)
GET           /formtemplates/:formTemplateId                                                            uk.gov.hmrc.gform.formtemplate.FormTemplatesController.getRaw(formTemplateId: FormTemplateRawId)
DELETE        /formtemplates/:formTemplateId/sensitive                                                  uk.gov.hmrc.gform.formtemplate.FormTemplatesController.removeSensitive(formTemplateId: String)
DELETE        /formtemplates/:formTemplateId                                                            uk.gov.hmrc.gform.formtemplate.FormTemplatesController.remove(formTemplateId: FormTemplateId)
GET           /formtemplates-with-redirects/:formTemplateId                                             uk.gov.hmrc.gform.formtemplate.FormTemplatesController.getWithRedirects(formTemplateId: FormTemplateId)

GET           /exposed-config                                                                           uk.gov.hmrc.gform.config.ConfigController.exposedConfig()

POST          /validate/des/:utr                                                                        uk.gov.hmrc.gform.validation.ValidationController.desRegistration(utr: String)

POST          /dms/submit                                                                               uk.gov.hmrc.gform.dms.DmsSubmissionController.submitToDms()
POST          /dms/submit-pdf                                                                           uk.gov.hmrc.gform.dms.DmsSubmissionController.submitPdfToDms()
POST          /dms/submit-with-attachments                                                              uk.gov.hmrc.gform.dms.DmsSubmissionController.submitToDmsWithAttachments

POST          /obligation/tax-period                                                                    uk.gov.hmrc.gform.obligation.ObligationController.getAllTaxPeriods()

POST          /email                                                                                    uk.gov.hmrc.gform.email.EmailCodeVerificationController.sendEmail()

GET           /dblookup/:id/:collectionName                                                             uk.gov.hmrc.gform.dblookup.DbLookupController.exists(id: DbLookupId, collectionName: CollectionName)
PUT           /dblookup/:collectionName                                                                 uk.gov.hmrc.gform.dblookup.DbLookupController.add(collectionName: CollectionName)

POST          /upscan/encrypt                                                                           uk.gov.hmrc.gform.upscan.UpscanController.encrypt
POST          /upscan/callback/:formComponentId/:envelopeId                                             uk.gov.hmrc.gform.upscan.UpscanController.callback(formComponentId: FormComponentId, envelopeId: EnvelopeId, formIdDataCrypted: Crypted)
GET           /upscan/:reference                                                                        uk.gov.hmrc.gform.upscan.UpscanController.reference(reference: UpscanReference)
DELETE        /upscan/:reference                                                                        uk.gov.hmrc.gform.upscan.UpscanController.deleteReference(reference: UpscanReference)

GET           /formStatistics/:formTemplateId                                                           uk.gov.hmrc.gform.formstatistics.FormStatisticsController.getFormCount(formTemplateId: FormTemplateId)
GET           /formStatistics/:formTemplateId/details                                                   uk.gov.hmrc.gform.formstatistics.FormStatisticsController.getFormCountDetails(formTemplateId: FormTemplateId)

GET           /envelopes/:envelopeId                                                                    uk.gov.hmrc.gform.envelope.EnvelopeController.getEnvelope(envelopeId: EnvelopeId)